<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.nss.hrm.backend.api.dao.ReagentStockDetailDao">
    <resultMap id="BaseResultMap" type="jp.co.nss.hrm.backend.model.ReagentStockDetail">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="stock_no" jdbcType="VARCHAR" property="stockNo"/>
        <result column="stock_type" jdbcType="VARCHAR" property="stockType"/>
        <result column="reagent_id" jdbcType="VARCHAR" property="reagentId"/>
        <result column="reagent_name" jdbcType="VARCHAR" property="reagentName"/>
        <result column="specification" jdbcType="VARCHAR" property="specification"/>
        <result column="manufacturer_name" jdbcType="VARCHAR" property="manufacturerName"/>
        <result column="registration_no" jdbcType="VARCHAR" property="registrationNo"/>
        <result column="supplier_short_name" jdbcType="VARCHAR" property="supplierShortName"/>
        <result column="branch" jdbcType="VARCHAR" property="branch"/>
        <result column="reagent_unit" jdbcType="VARCHAR" property="reagentUnit"/>
        <result column="reagent_status" jdbcType="VARCHAR" property="reagentStatus"/>
        <result column="reagent_temp" jdbcType="VARCHAR" property="reagentTemp"/>
        <result column="reagent_code" jdbcType="VARCHAR" property="reagentCode"/>
        <result column="qr_code" jdbcType="VARCHAR" property="qrCode"/>
        <result column="code_value" jdbcType="VARCHAR" property="codeValue"/>
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo"/>
        <result column="expire_date" jdbcType="DATE" property="expireDate"/>
        <result column="open_period" jdbcType="INTEGER" property="openPeriod"/>
        <result column="reagent_price" jdbcType="DOUBLE" property="reagentPrice"/>
        <result column="overdue" jdbcType="INTEGER" property="overdue"/>
        <result column="remain_day" jdbcType="INTEGER" property="remainDay"/>
        <result column="collect_no" jdbcType="VARCHAR" property="collectNo"/>
        <result column="enter_time" jdbcType="TIMESTAMP" property="enterTime"/>
        <result column="enter_no" jdbcType="VARCHAR" property="enterNo"/>
        <result column="enter_man" jdbcType="VARCHAR" property="enterMan"/>
        <result column="out_time" jdbcType="TIMESTAMP" property="outTime"/>
        <result column="out_no" jdbcType="VARCHAR" property="outNo"/>
        <result column="out_man" jdbcType="VARCHAR" property="outMan"/>
        <result column="apply_man" jdbcType="VARCHAR" property="applyMan"/>
        <result column="use_time" jdbcType="TIMESTAMP" property="useTime"/>
        <result column="device_id" jdbcType="VARCHAR" property="deviceId"/>
        <result column="device_reg_man" jdbcType="BIGINT" property="deviceRegMan"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="delete_by" jdbcType="VARCHAR" property="deleteBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , stock_no, stock_type, reagent_id, reagent_name, specification, manufacturer_name,
    registration_no, supplier_short_name, branch, reagent_unit, reagent_status, reagent_temp,
    reagent_code, qr_code, code_value, batch_no, expire_date, open_period, reagent_price,
    overdue, remain_day, collect_no, enter_time, enter_no, enter_man, out_time, out_no,
    out_man, apply_man, use_time, device_id, device_reg_man, update_by, create_time,
    create_by, update_time, delete_flag, delete_time, delete_by
    </sql>

    <select id="reagentOverall" resultType="jp.co.nss.hrm.backend.model.ReagentStock">
        SELECT
        rbi.NAME AS reagentName,
        rbi.specification AS reagentType,
        rbi.unit AS reagentUnit,
        rbi.manufacturer_name AS factory,
        rbi.supplier_short_name AS supplierName,
        IFNULL( ra.quantity, 0 ) AS quantity
        FROM
        (
        SELECT
        rbi.CODE AS CODE,
        count(*) AS quantity
        FROM
        reagent_base_info rbi
        LEFT JOIN reagent_stock_detail rsd ON rsd.reagent_id = rbi.CODE
        WHERE
        rsd.reagent_status = '1998'
        AND (rsd.apply_man is NULL OR rsd.apply_man = '' )
        <if test="branchName !=null and branchName != ''">
            and rsd.branch = #{branchName}
        </if>
        <if test="supplier !=null and supplier !=''">
            and rsd.supplier_short_name like "%"#{supplier}"%"
        </if>
        <if test="reagentName !=null and reagentName != ''">
            and rsd.reagent_name like "%"#{reagentName}"%"
        </if>
        GROUP BY rsd.reagent_id
        ) ra
        RIGHT JOIN reagent_base_info rbi ON ra.CODE = rbi.CODE
        ORDER BY
        ra.quantity
    </select>

    <select id="countBatchNo" resultType="java.lang.String">
        SELECT COUNT(*)
        FROM reagent_stock_detail
        WHERE reagent_id = #{reagentId}
          AND batch_no = #{batchNo}
    </select>

    <select id="chartBar" resultType="jp.co.nss.hrm.backend.api.dto.ReagentEcharts">
        SELECT reagent_name as name,
        COUNT(reagent_name) as value

        from reagent_stock_detail
        where reagent_status = 1998
        <if test="stockType !=null and stockType != ''">
            and stock_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        GROUP BY reagent_id
    </select>
    <select id="chartBarTop" resultType="jp.co.nss.hrm.backend.api.dto.ReagentEcharts">
        SELECT rod.reagent_name as name,
        SUM(rod.quantity) as value
        FROM reagent_out_bill rob
        LEFT JOIN reagent_out_detail rod
        on rob.bill_code = rod.bill_code

        WHERE 1=1
        <if test="outType !=null and outType != ''">
            and rob.bill_type = #{outType}
        </if>
        <if test="branch !=null and branch != ''">
            and rob.branch_name = #{branch}
        </if>

        GROUP BY rod.reagent_id
        ORDER BY SUM(rod.quantity) DESC
        LIMIT 5
    </select>

    <select id="chartPie" resultType="jp.co.nss.hrm.backend.api.dto.ReagentEcharts">
        SELECT supplier_short_name as name,
        COUNT(supplier_short_name) as value

        from reagent_stock_detail
        where reagent_status = 1998
        <if test="stockType !=null and stockType != ''">
            and stock_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        GROUP BY supplier_short_name
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_stock_detail
    </select>
    <select id="findMinDate" resultType="java.util.Date">
        SELECT MIN(expire_date)
        FROM reagent_stock_detail
        WHERE stock_no = #{stockNo}
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        and reagent_status = 1998
    </select>
    <update id="updateRemainDay">
        update reagent_stock_detail
        set remain_day = #{remainDay}
        where id = #{id}
    </update>
    <select id="getMoneyCount" resultType="java.lang.String">
        SELECT SUM(reagent_price)
        FROM reagent_stock_detail
        WHERE 1=1
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        and reagent_status = 1998
    </select>

    <select id="countOutIn" resultType="jp.co.nss.hrm.backend.api.dto.ReagentStatus">
        SELECT reagent_status as reagentStatus,
        count(*) as statusCount ,
        sum(reagent_price) as sumPrice
        FROM reagent_stock_detail
        WHERE (reagent_status = 1998 || reagent_status = "退货" || reagent_status = "出库" )
        <if test="startTime !=null and endTime !=null">
            and (update_time between #{startTime} and #{endTime})
        </if>
        <if test="stockType !=null and stockType != ''">
            and stock_type = #{stockType}
        </if>
        GROUP BY reagent_status
    </select>

    <select id="reagentUseLog" resultType="jp.co.nss.hrm.backend.api.dto.ReagentDetailReq">
        SELECT
        rsd.use_time as useTime,
        rsd.reagent_name as reagentName,
        rsd.reagent_unit as reagentUnit,
        rsd.batch_no as batchNo,
        rsd.expire_date as expireDate,
        rsd.reagent_code as reagentCode,
        rsd.specification as reagentSpecification,
        ra.true_name as updateBy,
        rd.device_name as deviceName

        FROM reagent_stock_detail rsd
        LEFT JOIN reagent_admin ra ON rsd.device_reg_man = ra.id
        LEFT JOIN reagent_device rd ON rsd.device_id = rd.id
        LEFT JOIN reagent_branch rb ON rd.branch_id = rb.id
        WHERE (rsd.device_id != null or rsd.device_id != '')
        <if test="startTime !=null and endTime !=null">
            and (rsd.use_time between #{startTime} and #{endTime})
        </if>
        <if test="keyword !=null and keyword != ''">
            and rsd.device_id = #{keyword}
        </if>
        <if test="reagentName !=null and reagentName != ''">
            and rsd.reagent_name like "%"#{reagentName}"%"
        </if>
        and rb.branch_name = #{branch}
        order by rsd.use_time
    </select>

    <select id="countStatus" resultType="jp.co.nss.hrm.backend.api.dto.ReagentStatus">
        SELECT reagent_status as reagentStatus,
        count(*) as statusCount ,
        sum(reagent_price) as sumPrice
        FROM reagent_stock_detail
        WHERE (reagent_status = "0" || reagent_status = 1 || reagent_status = 2 || reagent_status = 4)
        <if test="startTime !=null and endTime !=null">
            and (update_time between #{startTime} and #{endTime})
        </if>
        <if test="stockType !=null and stockType != ''">
            and stock_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        GROUP BY reagent_status
    </select>
    <select id="selectQrcode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_stock_detail
        WHERE stock_no = #{stockNo}
        and reagent_code = #{reagentId}
        AND id IS NOT NULL
        GROUP BY
        id
    </select>

    <select id="lossSummary" resultType="jp.co.nss.hrm.backend.api.dto.ReagentLossSummary">
        SELECT
        reagent_id as reagentId,
        reagent_name as reagentName,
        reagent_status as reagentStatus,
        COUNT(*) as statusCount
        FROM
        reagent_stock_detail
        WHERE (reagent_status = 0 or reagent_status = 1 or reagent_status = 2 or reagent_status = 4)
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="keyword !=null and keyword != ''">
            and (reagent_id like "%"#{keyword}"%"
            or reagent_name like "%"#{keyword}"%")
        </if>
        GROUP BY reagent_id,reagent_status
    </select>

    <select id="selectLoss" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_stock_detail
        WHERE (reagent_status = 0 or reagent_status = 1 or reagent_status = 2 or reagent_status = 4)
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="reagentId !=null and reagentId != ''">
            and reagent_id = #{reagentId}
        </if>
        <if test="reagentStatus !=null and reagentStatus != ''">
            and reagent_status = #{reagentStatus}
        </if>
        AND id IS NOT NULL
        GROUP BY id
        ORDER BY update_time desc
    </select>
    <select id="selectByStockNo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_stock_detail
        WHERE 1=1
        <if test="keyword !=null and keyword != ''">
            and stock_no = #{keyword}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="reagentCode !=null and reagentCode != ''">
            and reagent_code like "%"#{reagentCode}"%"
        </if>
        <if test="batchNo !=null and batchNo != ''">
            and batch_no like "%"#{batchNo}"%"
        </if>
        <if test="expireDate !=null and expireDate != ''">
            and expire_date like "%"#{expireDate}"%"
        </if>
        <if test="enterMan !=null and enterMan != ''">
            and enter_man like "%"#{enterMan}"%"
        </if>
        <if test="applyMan !=null and applyMan != ''">
            and apply_man like "%"#{applyMan}"%"
        </if>
        <if test="enterTime !=null and enterTime != ''">
            and enter_time like "%"#{enterTime}"%"
        </if>
        <if test="enterNo !=null and enterNo != ''">
            and enter_no like "%"#{enterNo}"%"
        </if>
        <if test="outTime !=null and outTime != ''">
            and out_time like "%"#{outTime}"%"
        </if>
        <if test="outNo !=null and outNo != ''">
            and out_no like "%"#{outNo}"%"
        </if>
        <if test="outMan !=null and outMan != ''">
            and out_man like "%"#{outMan}"%"
        </if>
        AND reagent_status = 1998
        AND id IS NOT NULL
        GROUP BY id
        ORDER BY reagent_code
    </select>
    <select id="fetchSearch" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_stock_detail
        WHERE 1=1
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="reagentCode !=null and reagentCode != ''">
            and reagent_code like "%"#{reagentCode}"%"
        </if>
        <if test="batchNo !=null and batchNo != ''">
            and batch_no like "%"#{batchNo}"%"
        </if>
        <if test="expireDate !=null and expireDate != ''">
            and expire_date like "%"#{expireDate}"%"
        </if>
        <if test="enterMan !=null and enterMan != ''">
            and enter_man like "%"#{enterMan}"%"
        </if>
        <if test="applyMan !=null and applyMan != ''">
            and apply_man like "%"#{applyMan}"%"
        </if>
        <if test="enterTime !=null and enterTime != ''">
            and enter_time like "%"#{enterTime}"%"
        </if>
        <if test="enterNo !=null and enterNo != ''">
            and enter_no like "%"#{enterNo}"%"
        </if>
        <if test="outTime !=null and outTime != ''">
            and out_time like "%"#{outTime}"%"
        </if>
        <if test="outNo !=null and outNo != ''">
            and out_no like "%"#{outNo}"%"
        </if>
        <if test="outMan !=null and outMan != ''">
            and out_man like "%"#{outMan}"%"
        </if>
        <if test="reagentName !=null and reagentName != ''">
            and reagent_name like "%"#{reagentName}"%"
        </if>
        <if test="manufacturerName !=null and manufacturerName != ''">
            and manufacturer_name like "%"#{manufacturerName}"%"
        </if>
        <if test="supplierShortName !=null and supplierShortName != ''">
            and supplier_short_name like "%"#{supplierShortName}"%"
        </if>
        <if test="reagentStatus !=null and reagentStatus != ''">
            AND reagent_status = #{reagentStatus}
        </if>
        <if test="reagentTemp !=null and reagentTemp != ''">
            and reagent_temp = #{reagentTemp}
        </if>
        AND id IS NOT NULL
        GROUP BY id
        ORDER BY reagent_code
    </select>

    <delete id="deleteDetailByQuantity">
        DELETE
        FROM reagent_stock_detail
        WHERE stock_no = #{stockNo}
        LIMIT #{quantity}
    </delete>

    <insert id="insertStockDetail" parameterType="jp.co.nss.hrm.backend.model.ReagentStockDetail">
        insert into reagent_stock_detail (stock_no, stock_type, reagent_id,
        reagent_name, specification, manufacturer_name,
        registration_no, supplier_short_name, branch,
        reagent_unit, reagent_status, reagent_temp,
        reagent_code, qr_code, code_value,
        batch_no, expire_date, open_period,
        reagent_price, overdue, remain_day, collect_no,
        enter_time, enter_no, enter_man,
        out_time, out_no, out_man,
        apply_man, use_time, device_id,
        device_reg_man, update_by, create_time,
        create_by, update_time, delete_flag,
        delete_time, delete_by)
        values
        <foreach collection="reagentStockDetailList" item="item" index="index" separator=",">
            (#{item.stockNo,jdbcType=VARCHAR}, #{item.stockType,jdbcType=VARCHAR}, #{item.reagentId,jdbcType=VARCHAR},
            #{item.reagentName,jdbcType=VARCHAR}, #{item.specification,jdbcType=VARCHAR},
            #{item.manufacturerName,jdbcType=VARCHAR},
            #{item.registrationNo,jdbcType=VARCHAR}, #{item.supplierShortName,jdbcType=VARCHAR},
            #{item.branch,jdbcType=VARCHAR},
            #{item.reagentUnit,jdbcType=VARCHAR}, #{item.reagentStatus,jdbcType=VARCHAR},
            #{item.reagentTemp,jdbcType=VARCHAR},
            #{item.reagentCode,jdbcType=VARCHAR}, #{item.qrCode,jdbcType=VARCHAR}, #{item.codeValue,jdbcType=VARCHAR},
            #{item.batchNo,jdbcType=VARCHAR}, #{item.expireDate,jdbcType=DATE}, #{item.openPeriod,jdbcType=INTEGER},
            #{item.reagentPrice,jdbcType=DOUBLE}, #{item.overdue,jdbcType=INTEGER}, #{item.remainDay,jdbcType=INTEGER},
            #{item.collectNo,jdbcType=VARCHAR},
            #{item.enterTime,jdbcType=TIMESTAMP}, #{item.enterNo,jdbcType=VARCHAR}, #{item.enterMan,jdbcType=VARCHAR},
            #{item.outTime,jdbcType=TIMESTAMP}, #{item.outNo,jdbcType=VARCHAR}, #{item.outMan,jdbcType=VARCHAR},
            #{item.applyMan,jdbcType=VARCHAR}, #{item.useTime,jdbcType=TIMESTAMP}, #{item.deviceId,jdbcType=VARCHAR},
            #{item.deviceRegMan,jdbcType=BIGINT}, #{item.updateBy,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.createBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.deleteFlag,jdbcType=TINYINT},
            #{item.deleteTime,jdbcType=TIMESTAMP}, #{item.deleteBy,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateStatus">
        update reagent_stock_detail
        set update_time    = SYSDATE(),
            reagent_status = #{lossId}
        where qr_code = #{qrCode}
    </update>

    <update id="updateFetchStatus">
        update reagent_stock_detail
        set
        update_time = SYSDATE() ,
        reagent_status = #{statusType},
        collect_no = #{collectNo}
        where qr_code in (
        <foreach collection="qrList" item="item" index="index" separator=", ">
            #{item}
        </foreach>
        )
    </update>

    <update id="updateFetchBranch">
        update reagent_stock_detail
        set branch = #{branch}
        where qr_code in (
        <foreach collection="qrList" item="item" index="index" separator=", ">
            #{item}
        </foreach>
        )
    </update>

    <update id="updateApplyMan">
        update reagent_stock_detail
        set apply_man = #{applyMan}
        where qr_code in (
        <foreach collection="qrList" item="item" index="index" separator=", ">
            #{item}
        </foreach>
        )
    </update>

    <update id="updateOutInfo">
        update reagent_stock_detail
        set out_man = #{outMan},
        out_time = #{outTime},
        update_time = #{outTime},
        update_by = #{adminId}
        where qr_code in (
        <foreach collection="qrList" item="item" index="index" separator=", ">
            #{item}
        </foreach>
        )
    </update>

    <select id="findReagentItem" resultType="jp.co.nss.hrm.backend.api.dto.ReagentItem">
        SELECT rib.stock_no            as billId,
               rib.reagent_id          as reagentId,
               rib.supplier_short_name as supplierShortName,
               rib.reagent_code        as reagentCode,
               rib.reagent_name        as reagentName,
               rib.batch_no            as batchNo,
               rib.expire_date         as expireDate,
               rib.open_period         as openPeriod,
               rib.out_time            as outTime,
               rib.qr_code             as qrCode,
               rib.code_value          as qrCodeValue,
               rib.manufacturer_name   as manufacturerName,
               rib.reagent_unit        as reagentUnit,
               rib.specification       as reagentSpecification,
               rib.registration_no     as registrationNo,
               rib.reagent_price       as reagentPrice,
               rib.branch              as branch,
               rib.reagent_status      as reagentStatus,
               rib.out_man             as outMan,
               rib.apply_man           as applyMan,
               rs.quantity             as reagentCount,
               rd.device_name          as deviceName,
               rd.device_code          as deviceCode
        from reagent_stock_detail rib
                 join reagent_stock rs
                      on rs.stock_no = rib.stock_no
                 left join reagent_device rd
                           on rd.id = rib.device_id
        where rib.qr_code = #{qrCode}
        limit 1
    </select>

    <!--    <select id="getEarlierTime" resultType="java.lang.String">-->
    <!--        SELECT min(expire_date)-->
    <!--        FROM reagent_stock_detail-->
    <!--        WHERE reagent_id = #{reagent.reagentId}-->
    <!--        AND batch_no != #{reagent.batchNo}-->
    <!--        AND reagent_status = "1998"-->
    <!--        <choose>-->
    <!--            <when test="applyMan!=null and applyMan!=''">-->
    <!--                AND apply_man = #{applyMan}-->
    <!--            </when>-->
    <!--            <when test="branch!=null and branch!=''">-->
    <!--                AND branch = #{branch}-->
    <!--            </when>-->
    <!--        </choose>-->
    <!--    </select>-->

    <select id="getReagentEarlier" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM reagent_stock_detail
        WHERE reagent_id = #{reagent.reagentId}
        AND batch_no != #{reagent.batchNo}
        AND branch = #{branch}
        AND expire_date &lt; #{reagent.expireDate}
        AND DATEDIFF(expire_date, CURRENT_DATE) &gt; 0
        <choose>
            <when test="applyMan!=null and applyMan!=''">
                AND apply_man = #{applyMan}
                AND reagent_status = "1999"
            </when>
            <otherwise>
                AND apply_man IS NULL
                AND reagent_status = "1998"
            </otherwise>
        </choose>
        GROUP BY id
    </select>

    <select id="searchStockNo" resultType="java.lang.String">
        SELECT stock_no
        FROM reagent_stock_detail
        WHERE qr_code = #{qrCode}
    </select>

    <select id="searchCodeValue" resultType="java.lang.String">
        SELECT code_value
        FROM reagent_stock_detail
        WHERE qr_code = #{qrCode}
    </select>

    <select id="isInStock" resultType="java.lang.String">
        SELECT reagent_id
        FROM reagent_stock_detail
        where FIND_IN_SET('1998', reagent_status)
          and reagent_id = #{code}
    </select>

    <select id="isSupInStock" resultType="java.lang.String">
        SELECT supplier_short_name
        FROM reagent_stock_detail
        where FIND_IN_SET('1998', reagent_status)
          and supplier_short_name = #{shortName}
    </select>

    <select id="getQrCodeByCN" resultType="java.lang.String">
        SELECT qr_code
        FROM reagent_stock_detail
        where collect_no = #{collectNo}
    </select>

    <select id="getReloList" resultType="jp.co.nss.hrm.backend.api.dto.ReagentCollectMess">
        SELECT reagent_name        as reagentName,
               reagent_code        as reagentCode,
               reagent_unit        as reagentUnit,
               supplier_short_name as supplierShortName,
               specification       as reagentSpecification,
               manufacturer_name   as manufacturerName,
               reagent_price       as reagentPrice,
               batch_no            as batchNo,
               expire_date         as expireDate,
               reagent_id          as reagentId,
               COUNT(*)            as quantity
        FROM reagent_stock_detail
        WHERE collect_no = #{collectNo}
        GROUP BY reagent_id,
                 batch_no
    </select>

    <select id="searchThreeValue" resultType="jp.co.nss.hrm.backend.api.dto.ReagentCollectMess">
        SELECT reagent_code as reagentCode,
               qr_code      as qrCode,
               code_value   as codeValue
        FROM reagent_stock_detail
        WHERE collect_no = #{collectNo}
          and reagent_id = #{reagentId}
          and batch_no = #{batchNo}
    </select>

    <select id="searchInStockNum" resultType="java.lang.Integer">
        SELECT count(*) as quantity
        FROM reagent_stock_detail
        where 1 = 1
        <if test="stockType !=null and stockType != ''">
            and stock_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="reagentCode !=null and reagentCode != ''">
            and reagent_id = #{reagentCode}
        </if>
    </select>

    <select id="selectByOperator" resultMap="BaseResultMap">
        SELECT rsd.*,
        TO_DAYS(expire_date)-TO_DAYS(CURRENT_DATE) as timeleft,
        date_add(out_time, INTERVAL rsd.open_period DAY) as outtime_add,
        TO_DAYS(date_add(out_time, INTERVAL rsd.open_period DAY)) - TO_DAYS(NOW()) as timeleft_open,
        IF ((TO_DAYS(expire_date)-TO_DAYS(CURRENT_DATE)) <![CDATA[ <  ]]>
        (TO_DAYS(date_add(out_time, INTERVAL rsd.open_period DAY))-TO_DAYS(NOW())),
        (TO_DAYS(expire_date)-TO_DAYS(CURRENT_DATE)),
        (TO_DAYS(date_add(out_time, INTERVAL rsd.open_period DAY))-TO_DAYS(NOW())) ) as mintimeleft
        FROM reagent_stock_detail rsd
        WHERE 1=1
        AND device_id IS NULL
        <if test="stockType != null and stockType != ''">
            AND stock_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            AND branch = #{branch}
        </if>
        <if test="reagentStatus !=null and reagentStatus != ''">
            AND reagent_status = #{reagentStatus}
        </if>
        AND TO_DAYS(expire_date) - TO_DAYS(CURRENT_DATE) > -2
        AND TO_DAYS(date_add(out_time, INTERVAL rsd.open_period DAY)) - TO_DAYS(NOW()) > -2
        ORDER BY
        (CASE WHEN mintimeleft <![CDATA[<= ]]> overdue THEN 0 END) DESC,
        mintimeleft ASC
    </select>

    <update id="updateEffectiveOpenTime">
        update reagent_stock_detail
        set open_period = #{days},
            update_by   = #{adminId},
            update_time = CURRENT_TIMESTAMP()
        where qr_code = #{qrcode}
    </update>

    <update id="updateDeviceInfo">
        UPDATE reagent_stock_detail
        SET device_id      = #{deviceId},
            device_reg_man = ${userId},
            use_time       = #{timeNow}
        WHERE qr_code = #{qrcode}
    </update>

    <select id="getDeptStockNumberByReagentId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM reagent_stock_detail
        WHERE reagent_id = #{reagentId}
          AND reagent_status = "1998"
          AND collect_no IS NOT NULL
    </select>

</mapper>
