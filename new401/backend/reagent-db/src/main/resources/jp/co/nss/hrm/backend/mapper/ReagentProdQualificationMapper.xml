<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.nss.hrm.backend.mapper.ReagentProdQualificationMapper">
  <resultMap id="BaseResultMap" type="jp.co.nss.hrm.backend.model.ReagentProdQualification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_id" jdbcType="VARCHAR" property="supplierId" />
    <result column="supplier_short_name" jdbcType="VARCHAR" property="supplierShortName" />
    <result column="reagent_id" jdbcType="VARCHAR" property="reagentId" />
    <result column="reagent_name" jdbcType="VARCHAR" property="reagentName" />
    <result column="manufacturer_business_license" jdbcType="VARCHAR" property="manufacturerBusinessLicense" />
    <result column="device_prod_license" jdbcType="VARCHAR" property="deviceProdLicense" />
    <result column="equipment_business_license" jdbcType="VARCHAR" property="equipmentBusinessLicense" />
    <result column="product_registration_form" jdbcType="VARCHAR" property="productRegistrationForm" />
    <result column="production_record_certificate" jdbcType="VARCHAR" property="productionRecordCertificate" />
    <result column="device_registration_certificate" jdbcType="VARCHAR" property="deviceRegistrationCertificate" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_by" jdbcType="VARCHAR" property="deleteBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, supplier_id, supplier_short_name, reagent_id, reagent_name, manufacturer_business_license, 
    device_prod_license, equipment_business_license, product_registration_form, production_record_certificate, 
    device_registration_certificate, other, create_time, create_by, update_time, update_by, 
    delete_flag, delete_time, delete_by
  </sql>
  <select id="selectByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reagent_prod_qualification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reagent_prod_qualification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from reagent_prod_qualification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualificationExample">
    delete from reagent_prod_qualification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualification">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reagent_prod_qualification (supplier_id, supplier_short_name, reagent_id, 
      reagent_name, manufacturer_business_license, 
      device_prod_license, equipment_business_license, 
      product_registration_form, production_record_certificate, 
      device_registration_certificate, other, create_time, 
      create_by, update_time, update_by, 
      delete_flag, delete_time, delete_by
      )
    values (#{supplierId,jdbcType=VARCHAR}, #{supplierShortName,jdbcType=VARCHAR}, #{reagentId,jdbcType=VARCHAR}, 
      #{reagentName,jdbcType=VARCHAR}, #{manufacturerBusinessLicense,jdbcType=VARCHAR}, 
      #{deviceProdLicense,jdbcType=VARCHAR}, #{equipmentBusinessLicense,jdbcType=VARCHAR}, 
      #{productRegistrationForm,jdbcType=VARCHAR}, #{productionRecordCertificate,jdbcType=VARCHAR}, 
      #{deviceRegistrationCertificate,jdbcType=VARCHAR}, #{other,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=TINYINT}, #{deleteTime,jdbcType=TIMESTAMP}, #{deleteBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualification">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reagent_prod_qualification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="supplierShortName != null">
        supplier_short_name,
      </if>
      <if test="reagentId != null">
        reagent_id,
      </if>
      <if test="reagentName != null">
        reagent_name,
      </if>
      <if test="manufacturerBusinessLicense != null">
        manufacturer_business_license,
      </if>
      <if test="deviceProdLicense != null">
        device_prod_license,
      </if>
      <if test="equipmentBusinessLicense != null">
        equipment_business_license,
      </if>
      <if test="productRegistrationForm != null">
        product_registration_form,
      </if>
      <if test="productionRecordCertificate != null">
        production_record_certificate,
      </if>
      <if test="deviceRegistrationCertificate != null">
        device_registration_certificate,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteBy != null">
        delete_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="supplierShortName != null">
        #{supplierShortName,jdbcType=VARCHAR},
      </if>
      <if test="reagentId != null">
        #{reagentId,jdbcType=VARCHAR},
      </if>
      <if test="reagentName != null">
        #{reagentName,jdbcType=VARCHAR},
      </if>
      <if test="manufacturerBusinessLicense != null">
        #{manufacturerBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="deviceProdLicense != null">
        #{deviceProdLicense,jdbcType=VARCHAR},
      </if>
      <if test="equipmentBusinessLicense != null">
        #{equipmentBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="productRegistrationForm != null">
        #{productRegistrationForm,jdbcType=VARCHAR},
      </if>
      <if test="productionRecordCertificate != null">
        #{productionRecordCertificate,jdbcType=VARCHAR},
      </if>
      <if test="deviceRegistrationCertificate != null">
        #{deviceRegistrationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteBy != null">
        #{deleteBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualificationExample" resultType="java.lang.Long">
    select count(*) from reagent_prod_qualification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reagent_prod_qualification
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierShortName != null">
        supplier_short_name = #{record.supplierShortName,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentId != null">
        reagent_id = #{record.reagentId,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentName != null">
        reagent_name = #{record.reagentName,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturerBusinessLicense != null">
        manufacturer_business_license = #{record.manufacturerBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceProdLicense != null">
        device_prod_license = #{record.deviceProdLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentBusinessLicense != null">
        equipment_business_license = #{record.equipmentBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.productRegistrationForm != null">
        product_registration_form = #{record.productRegistrationForm,jdbcType=VARCHAR},
      </if>
      <if test="record.productionRecordCertificate != null">
        production_record_certificate = #{record.productionRecordCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceRegistrationCertificate != null">
        device_registration_certificate = #{record.deviceRegistrationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteBy != null">
        delete_by = #{record.deleteBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reagent_prod_qualification
    set id = #{record.id,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      supplier_short_name = #{record.supplierShortName,jdbcType=VARCHAR},
      reagent_id = #{record.reagentId,jdbcType=VARCHAR},
      reagent_name = #{record.reagentName,jdbcType=VARCHAR},
      manufacturer_business_license = #{record.manufacturerBusinessLicense,jdbcType=VARCHAR},
      device_prod_license = #{record.deviceProdLicense,jdbcType=VARCHAR},
      equipment_business_license = #{record.equipmentBusinessLicense,jdbcType=VARCHAR},
      product_registration_form = #{record.productRegistrationForm,jdbcType=VARCHAR},
      production_record_certificate = #{record.productionRecordCertificate,jdbcType=VARCHAR},
      device_registration_certificate = #{record.deviceRegistrationCertificate,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      delete_by = #{record.deleteBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualification">
    update reagent_prod_qualification
    <set>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="supplierShortName != null">
        supplier_short_name = #{supplierShortName,jdbcType=VARCHAR},
      </if>
      <if test="reagentId != null">
        reagent_id = #{reagentId,jdbcType=VARCHAR},
      </if>
      <if test="reagentName != null">
        reagent_name = #{reagentName,jdbcType=VARCHAR},
      </if>
      <if test="manufacturerBusinessLicense != null">
        manufacturer_business_license = #{manufacturerBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="deviceProdLicense != null">
        device_prod_license = #{deviceProdLicense,jdbcType=VARCHAR},
      </if>
      <if test="equipmentBusinessLicense != null">
        equipment_business_license = #{equipmentBusinessLicense,jdbcType=VARCHAR},
      </if>
      <if test="productRegistrationForm != null">
        product_registration_form = #{productRegistrationForm,jdbcType=VARCHAR},
      </if>
      <if test="productionRecordCertificate != null">
        production_record_certificate = #{productionRecordCertificate,jdbcType=VARCHAR},
      </if>
      <if test="deviceRegistrationCertificate != null">
        device_registration_certificate = #{deviceRegistrationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteBy != null">
        delete_by = #{deleteBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.nss.hrm.backend.model.ReagentProdQualification">
    update reagent_prod_qualification
    set supplier_id = #{supplierId,jdbcType=VARCHAR},
      supplier_short_name = #{supplierShortName,jdbcType=VARCHAR},
      reagent_id = #{reagentId,jdbcType=VARCHAR},
      reagent_name = #{reagentName,jdbcType=VARCHAR},
      manufacturer_business_license = #{manufacturerBusinessLicense,jdbcType=VARCHAR},
      device_prod_license = #{deviceProdLicense,jdbcType=VARCHAR},
      equipment_business_license = #{equipmentBusinessLicense,jdbcType=VARCHAR},
      product_registration_form = #{productRegistrationForm,jdbcType=VARCHAR},
      production_record_certificate = #{productionRecordCertificate,jdbcType=VARCHAR},
      device_registration_certificate = #{deviceRegistrationCertificate,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      delete_by = #{deleteBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>