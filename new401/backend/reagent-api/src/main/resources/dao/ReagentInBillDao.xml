<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.nss.hrm.backend.api.dao.ReagentInBillDao">
    <resultMap id="BaseResultMap" type="jp.co.nss.hrm.backend.api.dto.ReagentInBillVm">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="bill_code" jdbcType="VARCHAR" property="billCode"/>
        <result column="pre_inbill_code" jdbcType="VARCHAR" property="preInBillCode"/>
        <result column="bill_type" jdbcType="VARCHAR" property="billType"/>
        <result column="create_type" jdbcType="VARCHAR" property="createType"/>
        <result column="supplier_id" jdbcType="VARCHAR" property="supplierId"/>
        <result column="supplier_short_name" jdbcType="VARCHAR" property="supplierShortName"/>
        <result column="bill_date" jdbcType="DATE" property="billDate"/>
        <result column="bill_status" jdbcType="VARCHAR" property="billStatus"/>
        <result column="branch" jdbcType="VARCHAR" property="branch"/>
        <result column="bill_creator" jdbcType="VARCHAR" property="billCreator"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="delete_by" jdbcType="VARCHAR" property="deleteBy"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , bill_code, pre_inbill_code, bill_type, create_type, supplier_id, supplier_short_name, bill_date,
    bill_status, branch, bill_creator, remark, create_time, create_by, update_time, update_by,
    delete_flag, delete_time, delete_by
    </sql>


    <select id="reagentOutIn" resultType="jp.co.nss.hrm.backend.api.dto.ReagentOutIn">
        SELECT
        rb.name as reagentName,
        rb.supplier_short_name as supplierName,
        rdb.quantity as inQuantity,
        rdb.total as inTotal,
        SUM(roo.quantity) as outQuantity,
        SUM(roo.total) as outTotal,
        SUM(rrr.quantity) as refundQuantity,
        SUM(rrr.total) as refundTotal

        FROM
        reagent_base_info rb

        LEFT JOIN
        (SELECT SUM(rid.quantity) as quantity,SUM(rid.total) as total,
        rid.reagent_id as reagent_id
        FROM reagent_in_bill rib LEFT JOIN reagent_in_detail rid
        on rib.bill_code = rid.bill_code
        WHERE rib.bill_status =1
        <if test="startTime !=null and endTime !=null">
            and (rib.create_time between #{startTime} and #{endTime})
        </if>
        <if test="branch !=null and branch != ''">
            and rib.branch = #{branch}
        </if>

        GROUP BY rid.reagent_id,rib.branch) rdb

        ON rb.code = rdb.reagent_id

        LEFT JOIN
        (SELECT rod.reagent_id as reagent_id,SUM(rod.quantity) as quantity,SUM(rod.total) as total,rob.branch_name as
        branch
        FROM reagent_out_bill rob LEFT JOIN reagent_out_detail rod
        on rod.bill_code = rob.bill_code
        WHERE 1=1

        <if test="branch !=null and branch != ''">
            and rob.branch_name = #{branch}
        </if>
        <if test="startTime !=null and endTime !=null">
            and (rob.create_time between #{startTime} and #{endTime})
        </if>

        GROUP BY rod.reagent_id
        )roo
        on rb.code = roo.reagent_id

        LEFT JOIN
        (SELECT rrd.reagent_id as reagent_id,SUM(rrd.quantity) as quantity, SUM(rrd.total) as total,rr.branch as branch
        FROM reagent_refund rr LEFT JOIN reagent_refund_detail rrd
        on rrd.refund_code = rr.refund_code
        WHERE 1=1
        <if test="branch !=null and branch != ''">
            and rr.branch = #{branch}
        </if>
        <if test="startTime !=null and endTime !=null">
            and (rr.create_time between #{startTime} and #{endTime})
        </if>

        GROUP BY rrd.reagent_id
        ) rrr
        on rb.code = rrr.reagent_id
        where 1=1
        <if test="supplier !=null and supplier !=''">
            and rb.supplier_short_name like "%"#{supplier}"%"
        </if>
        <if test="reagentName !=null and reagentName != ''">
            and rb.name like "%"#{reagentName}"%"
        </if>

        GROUP BY rb.code

    </select>
    <select id="countIn" resultType="jp.co.nss.hrm.backend.api.dto.ReagentStatus">
        SELECT
        sum(rid.quantity) as statusCount ,
        sum(rid.total) as sumPrice

        FROM reagent_in_bill rib
        join reagent_in_detail rid
        on rib.bill_code = rid.bill_code

        WHERE bill_status = 1
        <if test="startTime !=null and endTime !=null">
            and (rib.bill_date between #{startTime} and #{endTime})
        </if>
        <if test="stockType !=null and stockType != ''">
            and rib.bill_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and rib.branch = #{branch}
        </if>
        <if test="supplier !=null and supplier != ''">
            and rib.supplier_short_name like "%"#{supplier}"%"
        </if>
    </select>


    <select id="searchList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_in_bill
        where bill_type = #{billType}
        <if test="keyword !=null and keyword != ''">
            and (bill_code like "%"#{keyword}"%"
            or supplier_short_name like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
    </select>

    <select id="getAllByBillType" resultType="jp.co.nss.hrm.backend.model.ReagentInBill">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_in_bill
        WHERE
        bill_type = #{billType}
        AND id IS NOT NULL
        GROUP BY
        id
    </select>

    <update id="updateByBC" parameterType="java.lang.String">
        update reagent_in_bill
        set bill_status = #{billStatus}
        where bill_code = #{billCode}
    </update>

    <select id="findReagentItem" resultType="jp.co.nss.hrm.backend.api.dto.ReagentItem">
        SELECT rib.id                  as billId,
               rid.id                  as detailId,
               rib.code                as code,
               rib.supplier_short_name as supplierShortName,
               rbi.name                as name,
               rid.batch_no            as batchNo,
               rid.expire_date         as expireDate,
               ridi.qr_code            as qrCode
        from reagent_in_bill rib
                 join reagent_in_detail rid
                      on rid.in_bill_id = rib.id
                 join reagent_in_detail_item ridi
                      on ridi.in_detail_id = rid.id
                 join reagent_base_info rbi
                      on rid.reagent_id = rbi.id
        where rib.bill_status = '1'
          and ridi.qr_code = #{qrCode} limit 1
    </select>
    <select id="selectByBranch" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_in_bill
        where
        bill_type = #{billType}
        and
        branch = #{branch}
        <if test="keyword !=null and keyword != ''">
            and (bill_code like "%"#{keyword}"%"
            or supplier_short_name like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
        order by
        create_time desc
    </select>

    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_in_bill
        where
        bill_type = #{billType}
        <if test="keyword !=null and keyword != ''">
            and (bill_code like "%"#{keyword}"%"
            or supplier_short_name like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
        order by
        create_time desc
    </select>

    <select id="selectSupplier" resultType="java.lang.String">
        select supplier_short_name
        from reagent_in_bill
        where bill_code = #{billCode}
    </select>

    <insert id="insert" parameterType="jp.co.nss.hrm.backend.api.dto.ReagentInBillVm">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into reagent_in_bill (bill_code, pre_inbill_code, bill_type, create_type,
        supplier_id, supplier_short_name, bill_date,
        bill_status, branch, bill_creator,
        remark, create_time, create_by,
        update_time, update_by, delete_flag,
        delete_time, delete_by)
        values (#{billCode,jdbcType=VARCHAR}, #{preInBillCode,jdbcType=VARCHAR}, #{billType,jdbcType=VARCHAR},
        #{createType,jdbcType=VARCHAR},
        #{supplierId,jdbcType=VARCHAR}, #{supplierShortName,jdbcType=VARCHAR}, #{billDate,jdbcType=DATE},
        #{billStatus,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR}, #{billCreator,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=TINYINT},
        #{deleteTime,jdbcType=TIMESTAMP}, #{deleteBy,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteByInBillCode">
        DELETE
        FROM reagent_in_bill
        WHERE bill_code = #{inBillCode}
    </delete>

    <select id="getInCodeListByPreInCode" resultType="java.lang.String">
        SELECT bill_code
        FROM reagent_in_bill
        WHERE pre_inbill_code = #{preInBillCode}
          AND bill_status = "0"
    </select>

    <delete id="deleteByInBillCodeList">
        DELETE FROM reagent_in_bill
        WHERE bill_code IN
        <foreach collection="inBillCodeList" item="billCode" separator=", " open="(" close=")">
            #{billCode}
        </foreach>
    </delete>

    <select id="getPrintData" resultType="jp.co.nss.hrm.backend.api.dto.ReagentPreInBillMess">
        SELECT
        rib.bill_code as billCode,
        rib.create_time as createTime,
        rs.supplier_name as supplierName,
        ra.true_name as trueName

        FROM reagent_in_bill rib
        join reagent_supplier rs
        on rib.supplier_id = rs.supplier_code
        join reagent_admin ra
        on rib.bill_creator = ra.username

        WHERE 1 = 1
        <if test="keyword != null and keyword != ''">
            and rib.bill_code = #{keyword}
        </if>
    </select>

    <select id="getBranchPrintData" resultType="jp.co.nss.hrm.backend.api.dto.ReagentPreInBillMess">
        SELECT
        rib.bill_code AS billCode,
        rib.create_time AS createTime,
        ra1.branch AS supplierName,
        ra2.true_name AS trueName
        FROM
        reagent_in_bill rib
        JOIN reagent_in_detail_item ridi ON rib.bill_code = ridi.bill_code
        JOIN reagent_stock_detail rsd ON ridi.qr_code = rsd.qr_code
        JOIN reagent_admin ra1 ON rsd.update_by = ra1.id
        JOIN reagent_admin ra2 ON rib.bill_creator = ra2.username
        WHERE 1 = 1
        <if test="keyword != null and keyword != ''">
            and rib.bill_code = #{keyword}
        </if>
    </select>

</mapper>
