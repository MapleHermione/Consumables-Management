<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.nss.hrm.backend.api.dao.ReagentRefundDao">
    <resultMap id="BaseResultMap" type="jp.co.nss.hrm.backend.model.ReagentRefund">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="refund_code" jdbcType="VARCHAR" property="refundCode"/>
        <result column="refund_type" jdbcType="VARCHAR" property="refundType"/>
        <result column="quantity" jdbcType="BIGINT" property="quantity"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="branch" jdbcType="VARCHAR" property="branch"/>
        <result column="supplier_short_name" jdbcType="VARCHAR" property="supplierShortName"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="delete_by" jdbcType="VARCHAR" property="deleteBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , refund_code, refund_type, quantity, total, branch, supplier_short_name, remark,
    create_time, create_by, update_time, update_by, delete_flag, delete_time, delete_by
    </sql>

    <sql id="Base_StockDetail_Column_List">
        id
        , stock_no, stock_type, reagent_id, reagent_name, specification, manufacturer_name,
    registration_no, supplier_short_name, reagent_unit, reagent_status, reagent_temp,
    reagent_code, qr_code, batch_no, expire_date, open_period, reagent_price, overdue,
    enter_time, enter_no, enter_man, out_time, out_no, out_man, apply_man, update_by,
    create_time, create_by, update_time, delete_flag, delete_time, delete_by
    </sql>

    <select id="countOutIn" resultType="jp.co.nss.hrm.backend.api.dto.ReagentStatus">
        SELECT
        sum(quantity) as statusCount ,
        sum(total) as sumPrice
        FROM reagent_refund
        WHERE 1=1
        <if test="startTime !=null and endTime !=null">
            and (create_time between #{startTime} and #{endTime})
        </if>
        <if test="stockType !=null and stockType != ''">
            and refund_type = #{stockType}
        </if>
        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="supplier !=null and supplier != ''">
            and supplier_short_name like "%"#{supplier}"%"
        </if>
    </select>

    <select id="countRefund" resultMap="jp.co.nss.hrm.backend.mapper.ReagentRefundDetailMapper.BaseResultMap">
        select ar.*
        from reagent_refund_detail ar
                 left join reagent_refund r on ar.refund_code = r.refund_code
        where r.refund_type = #{refundType}
        order by create_time desc
    </select>
    <select id="getAllByRefundType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reagent_refund
        WHERE
        refund_type = #{refundType}
        AND id IS NOT NULL
        GROUP BY
        id
    </select>

    <select id="getAlterStockList">
        SELECT
        <include refid="Base_StockDetail_Column_List"/>
        FROM
        reagent_stock_detail
        WHERE
        reagent_id = #{reagentId}
        LIMIT #{number}
    </select>

    <select id="searchByDate" resultMap="jp.co.nss.hrm.backend.mapper.ReagentRefundDetailMapper.BaseResultMap">
        SELECT ar.*
        FROM reagent_refund_detail ar
                 left join reagent_refund r on ar.refund_code = r.refund_code
        where ar.create_time
            between #{startTime} and #{endTime}
          AND r.refund_type = #{refundType}
        order by create_time desc
    </select>

    <select id="searchList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_refund
        where refund_type = #{refundType}
        <if test="keyword !=null and keyword != ''">
            and (refund_code like "%"#{keyword}"%"
            or create_by like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
    </select>

    <select id="selectByBranch" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_refund
        where
        refund_type = #{refundType}

        <if test="branch !=null and branch != ''">
            and branch = #{branch}
        </if>
        <if test="supplier !=null and supplier != ''">
            and supplier_short_name = #{supplier}
        </if>
        <if test="keyword !=null and keyword != ''">
            and (refund_code like "%"#{keyword}"%"
            or create_by like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
        order by
        create_time desc
    </select>

    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reagent_refund
        where
        refund_type = #{refundType}
        <if test="keyword !=null and keyword != ''">
            and (refund_code like "%"#{keyword}"%"
            or create_by like "%"#{keyword}"%")
        </if>
        GROUP BY
        id
        order by
        create_time desc
    </select>
    <select id="getPrintData" resultType="jp.co.nss.hrm.backend.api.dto.ReagentPreInBillMess">
        SELECT
        rr.refund_code AS billCode,
        rr.create_time AS createTime,
        ra1.true_name AS billCreator,
        ra1.branch AS billBranch,
        ra1.true_name AS applicationUser,
        ra1.branch AS applicationBranch
        FROM
        reagent_refund rr
        JOIN reagent_admin ra1 ON rr.create_by = ra1.username
        WHERE
        1 = 1
        <if test="keyword != null and keyword != ''">
            and rr.refund_code = #{keyword}
        </if>
    </select>

</mapper>